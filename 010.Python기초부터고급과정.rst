=================================================
파이썬 마스터 과정: 초급부터 고급까지 (IT 전문가 강의)
=================================================


.. container:: custom-note
   **강의 특징:** IT 전문가의 실전 경험을 바탕으로, 이론과 실무를 겸비한 Pythonic 코딩 능력을 배양합니다. 각 강의는 **시각화 자료**, **실전 팁**, 흔한 오해 및 실수 방지 가이드라인을 포함합니다.


.. contents:: 목차
   :depth: 3
   :local:


.. sectnum::


제 1부: Python 입문 및 기초 문법 완벽 마스터 (초급)
=====================================================


1.1. 개발 환경 구축 및 기본 콘솔 사용법
----------------------------------------

   * 1.1.1. Python 설치 및 버전 관리 (Anaconda/Miniconda)
   * 1.1.2. **통합 개발 환경 (IDE) 설정**: VS Code와 Jupyter Notebook :ref:`IDE-Setup`


1.2. 핵심 자료형 (Data Types) 및 변수
-------------------------------------

   * 1.2.1. 숫자형 (Integer, Float)과 기본 연산
   * 1.2.2. 문자열 (String) 처리 및 포매팅 :ref:`String-Ops`
   * 1.2.3. 리스트(List)와 튜플(Tuple): **구조 및 시각화**
   * 1.2.4. 딕셔너리(Dictionary)와 셋(Set): **핵심 사용법**
   * 1.2.5. **흔한 실수**: 가변(Mutable) 객체 vs. 불변(Immutable) 객체


1.3. 프로그램 흐름 제어 (Control Flow)
-------------------------------------

   * 1.3.1. 조건문 (if, elif, else) : **흐름도(Flowchart) 분석**
   * 1.3.2. 반복문 (for, while) 및 제어 (break, continue)
   * 1.3.3. **실전 팁**: 효율적인 반복문 설계


1.4. 함수 (Functions)의 이해와 활용
-----------------------------------

   * 1.4.1. 함수 정의, 매개변수, 반환값
   * 1.4.2. 변수의 범위 (Scope): Local, Enclosing, Global, Built-in (LEGB 규칙)
   * 1.4.3. 모듈(Module) 가져오기 및 사용법 맛보기


제 2부: 객체 지향 및 데이터 활용 심화 (중급)
===========================================


2.1. 객체 지향 프로그래밍 (OOP) 기본
------------------------------------

   * 2.1.1. 클래스(Class)와 객체(Object)의 개념 : **도형화 설명**
   * 2.1.2. 생성자 (\_\_init\_\_) 및 속성(Attribute)
   * 2.1.3. 상속(Inheritance), 다형성(Polymorphism) 기초


2.2. 모듈, 패키지 및 예외 처리
-----------------------------

   * 2.2.1. 패키지 생성 및 관리
   * 2.2.2. **표준 라이브러리 활용**: os, sys, datetime
   * 2.2.3. 예외 처리 (try, except, finally) 및 사용자 정의 예외


2.3. 데이터 입출력 및 파일 관리
-------------------------------

   * 2.3.1. 텍스트 파일(Text File) 읽기/쓰기
   * 2.3.2. CSV, JSON 등 구조화된 데이터 파일 처리


2.4. 데이터 과학 기초 (Numpy & Pandas 소개)
------------------------------------------

   * 2.4.1. **Numpy**: 배열(Array)과 벡터화 연산
   * 2.4.2. **Pandas**: Series와 DataFrame 이해 : **데이터 테이블 시각화**
   * 2.4.3. **실전 팁**: 데이터 로딩 및 전처리 (Cleaning) 맛보기


제 3부: 고급 기법 및 실전 프로젝트 구성 (고급)
==============================================


3.1. Python 고급 테크닉
------------------------

   * 3.1.1. 람다(Lambda)와 filter, map
   * 3.1.2. 리스트/딕셔너리 컴프리헨션(Comprehension) : **성능 비교 그래프**
   * 3.1.3. 제너레이터(Generator)와 이터레이터(Iterator) : 메모리 효율성


3.2. **웹 서비스 연동 및 API 개발 기초**
----------------------------------------

   * 3.2.1. **Flask/Django** 기반 간단한 웹 앱 구조 : **아키텍처 다이어그램**
   * 3.2.2. HTTP 통신 이해 및 RESTful API 개념


3.3. 데이터베이스 연동 및 관리
------------------------------

   * 3.3.1. SQLite3를 활용한 DB 연결
   * 3.3.2. SQL을 이용한 데이터 **CRUD** (Create, Read, Update, Delete)


3.4. **성능 최적화 및 병렬 처리 (보안 기초 포함)**
------------------------------------------------

   * 3.4.1. 멀티스레딩(Multithreading)과 멀티프로세싱(Multiprocessing)
   * 3.4.2. **중요 강조**: 파이썬 GIL (Global Interpreter Lock) 이해
   * 3.4.3. **보안 팁**: 입력값 검증 및 환경 변수 사용법


3.5. 실전 프로젝트 및 데이터 시각화
------------------------------------

   * 3.5.1. **Matplotlib & Seaborn**을 활용한 고급 차트 생성 및 분석 : **예제 시각화**
   * 3.5.2. 최종 프로젝트: 웹 스크래핑 데이터 분석 및 시각화 서비스 배포 (GitHub/Webpage)


.. rubric:: 참고 자료 및 공식 문서 하이퍼링크


.. target-notes::
    .. _IDE-Setup: https://code.visualstudio.com/docs/languages/python
    .. _String-Ops: https://docs.python.org/3/library/stdtypes.html#text-sequence-type-str
